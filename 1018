# 다중 클래스와 다중 레이블의 차이

## 원핫 인코딩은 다중 클래스(multiclass) 느낌

## 시퀀스 인코딩이 다중 레이블(multilabel) 느낌



백견불여1조



풀링을 하는 이유 

- 모델이 주요한 특징을 학습 할 수 있도록 도와줌(특성이 제일 높은 것을 학습)
- 컨볼루션 신경망이 이동 불변성특성을 가지도록 함(물체가 다른곳으로 이동해도 학습가능?)





패딩

완전 연결층은 데이터의 형상이 무시됨 >> CNN이 나옴

공간적으로 가까운 픽셀은 값이 비슷하거나  RGB  의 각 채널은 서로 밀집하게 관련 되있거나 거리가 먼 픽셀끼리는 관련이 없고 이미지 데이터는 3차원 공간에서 이러한 정보를 내포하고 있다. 



필터는 가중치 파라미터(w) 와 같음

패딩(Padding)은 합성곱 연산을 수행하기 전, 입력데이터 주변을 특정값으로 채워 늘리는 것을 말한다. 패딩(Padding)은 주로 출력데이터의 공간적(Spatial)크기를 조절하기 위해 사용한다. 패딩을 할 때 채울 값은 hyper-parameter로 어떤 값을 채울지 결정할 수 있지만, 주로 **zero-padding**을 사용한다. 

패딩을 사용하는 이유는 패딩을 사용하지 않을 경우, 데이터의 Spatial 크기는 Conv Layer를 지날 때 마다 작아지게 되므로, 가장자리의 정보들이 사라지는 문제가 발생하기 때문에 패딩을 사용하며, 주로 합성곱 계층의 출력이 입력 데이터의 공간적 크기와 동일하게 맞춰주기 위해 사용한다



출처: https://excelsior-cjh.tistory.com/180 [EXCELSIOR]



스트라이드는 입력데이터에 필터를 적용할 때 이동할 간격을 조절하는 것, 즉 **필터가 이동할 간격을 말한다**. 스트라이드 또한 출력 데이터의 크기를 조절하기 위해 사용한다. 스트라이드(Stride)는 보통 1과 같이 작은 값이 더 잘 작동하며, Stride가 1일 경우 입력 데이터의 spatial 크기는 pooling 계층에서만 조절하게 할 수 있다. 아래의 그림은 1폭 짜리 zero-padding과 Stride값을 1로 적용한 뒤 합성곱 연산을 수행하는 예제이다.



![img](https://t1.daumcdn.net/cfile/tistory/999408355BC97F062C)







![스크린샷 2021-10-18 오후 10.46.51](/Users/kojunsu/Library/Application Support/typora-user-images/스크린샷 2021-10-18 오후 10.46.51.png)출처: https://excelsior-cjh.tistory.com/180 [EXCELSIOR]![스크린샷 2021-10-18 오후 10.47.08](/Users/kojunsu/Library/Application Support/typora-user-images/스크린샷 2021-10-18 오후 10.47.08.png)



과대적합을 해결하는 대표적인 방법중 하나로 가중치 규제가 있다

가중치 규제란 가중치의 값이 커지지 않도록 제한하는 기법이다. 

가중치는 규제하면 모델의 일반화 성능이 올라간다. 
